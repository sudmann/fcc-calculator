{"version":3,"sources":["components/Display.js","components/Calculator.js","components/Buttons.js","index.js"],"names":["Display","props","id","class","calcState","formula","join","undefined","currOp","className","currNumber","initialCalcState","Calculator","useState","setCalcState","Buttons","actionTypes","operator","clear","eval","decimal","buttons","value","action","assignAction","button","state","newNumber","includes","expr","console","log","startsWith","substring","match","newFormula","toString","push","map","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1480e493.chunk.js","sourcesContent":["import './display.css'\n\nconst Display = (props) => (\n  <div id=\"display\">\n    <div class=\"row\" id=\"formula\">\n      {\n        props.calcState.formula.join(' ')\n        + (props.calcState.currOp !== undefined ? props.calcState.currOp : '')\n      }\n    </div>\n    <div className=\"row\" id=\"calcState\">\n        {props.calcState.currNumber}\n      </div>\n  </div>\n);\n\nexport default Display;","import { useState } from 'react';\n\nimport Display from './Display';\nimport Buttons from './Buttons';\n\nimport './calculator.css';\n\nexport const initialCalcState = {\n  formula: [],\n  currNumber: '0',\n  currOp: undefined,\n};\n\nconst Calculator = () => {\n  const [calcState, setCalcState] = useState(initialCalcState);\n\n  return (\n    <div id=\"calculator\">\n      <Display calcState={calcState} />\n      <Buttons setCalcState={setCalcState} />\n    </div>\n  );\n};\n\nexport default Calculator;","import './buttons.css';\nimport { initialCalcState } from './Calculator';\n\nconst actionTypes = {\n  operator: \"OP\",\n  clear: \"AC\",\n  eval: \"EVAL\",\n  decimal: \"DECIMAL\"\n};\n\nconst buttons = [\n  { id: \"clear\", value: \"AC\", action: actionTypes.clear },\n  { id: \"divide\", value: \"/\", action: actionTypes.operator },\n  { id: \"multiply\", value: \"*\", action: actionTypes.operator },\n  { id: \"seven\", value: 7 },\n  { id: \"eight\", value: 8 },\n  { id: \"nine\", value: 9 },\n  { id: \"subtract\", value: \"-\", action: actionTypes.operator },\n  { id: \"four\", value: 4 },\n  { id: \"five\", value: 5 },\n  { id: \"six\", value: 6 },\n  { id: \"add\", value: \"+\", action: actionTypes.operator },\n  { id: \"one\", value: 1 },\n  { id: \"two\", value: 2 },\n  { id: \"three\", value: 3 },\n  { id: \"equals\", value: \"=\", action: actionTypes.eval },\n  { id: \"zero\", value: 0 },\n  { id: \"decimal\", value: \".\", action: actionTypes.decimal },\n];\n\nconst Buttons = (props) => {\n\n  // To be honest, this is function is horrible\n  const assignAction = (button) => {\n    switch (button.action) {\n      case actionTypes.clear:\n        return () => {\n          props.setCalcState(initialCalcState)\n        }\n      case actionTypes.decimal:\n        return () => {\n          props.setCalcState(state => {\n            const newNumber = state.currNumber.includes('.') ? state.currNumber : state.currNumber + '.'\n            return {\n              formula: [...state.formula],\n              currNumber: newNumber,\n              currOp: undefined,\n            };\n          });\n        }\n        case actionTypes.eval:\n          return () => {\n            props.setCalcState(state => {\n              const expr = [...state.formula, state.currOp, state.currNumber].join('');\n              console.log(expr, eval(expr));\n              return {\n                formula: [],\n                currNumber: eval(expr),\n                currOp: undefined,\n              };\n            });\n          }\n          case actionTypes.operator:\n            return () => {\n              props.setCalcState(state => {\n                if (state.currOp === undefined) {\n                  return {\n                    formula: [...state.formula, state.currNumber],\n                    currNumber: '0',\n                    currOp: button.value,\n                  }\n                } if (button.value === '-') {\n                  return {\n                    formula: [...state.formula],\n                    currNumber: state.currNumber.startsWith('-')\n                      ? state.currNumber.substring(1)\n                      : '-' + state.currNumber,\n                    currOp: state.currOp,\n                  };\n                }\n                return {\n                  formula: [...state.formula],\n                  currNumber: '0',\n                  currOp: button.value,\n                };\n              });\n            }\n            default:\n              return () => {\n                props.setCalcState(state => {\n                  if(button.value === 0 && (state.currNumber.match(/-?0$/) !== null)){\n                    return {\n                      formula: [...state.formula],\n                      currNumber: state.currNumber,\n                      currOp: state.currOp,\n                    }\n                  }\n\n                  const newFormula = [...state.formula];\n                  let newNumber = state.currNumber + button.value.toString();\n                  if (state.currNumber === '0') {\n                    newNumber = button.value.toString();\n                  }\n                  if (state.currNumber === '-0') {\n                    newNumber = '-' + button.value.toString();\n                  }\n\n                  if(state.currOp !== undefined) {\n                    newFormula .push(state.currOp);\n                  }\n\n                  return {\n                    formula: newFormula,\n                    currNumber: newNumber,\n                    currOp: undefined,\n                  }\n                });\n              };\n    }\n  }\n\n  return (\n    <div id=\"buttons\">\n      {\n        buttons.map(button => (\n          <button\n            id={ button.id }\n            key={ button.id }\n            onClick={ assignAction(button) }\n          >\n            { button.value }\n          </button>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Buttons;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Calculator from './components/Calculator';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}